import os
import random
from dashscope import Generation
import dashscope
import json

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ API ===
dashscope.api_key = os.getenv("DASHSCOPE_API_KEY")  # –ë–µ—Ä—ë–º –∏–∑ GitHub Secrets

# === –¢–µ–º—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ ===
TOPICS = [
    "–∫–æ–Ω—Ñ–ª–∏–∫—Ç –∑–∞ –≠—Ç–µ—Ä–∏–π-–∫—Ä–∏—Å—Ç–∞–ª–ª –º–µ–∂–¥—É –ê—Ä–∫–∞–Ω–∏–µ–π –∏ –¢–∏—Ä–∞–Ω–∏–µ–π",
    "–ø—Ä–æ—Ç–µ—Å—Ç—ã –≤ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞—Ö –°–µ—Ä–∞–ª–∏–∏ –ø—Ä–æ—Ç–∏–≤ —Ü–µ–Ω–∑—É—Ä—ã",
    "–§—Ä–µ–¥–æ–Ω–∏—è –ø—Ä–æ–≤–æ–¥–∏—Ç —É—á–µ–Ω–∏—è —É –≥—Ä–∞–Ω–∏—Ü—ã —Å –°–µ—Ä–∞–ª–∏–µ–π",
    "–ú–∏—Ä–∞–Ω–∏–∫–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –Ω–µ–π—Ä–æ–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å",
    "–¢–∏—Ä–∞–Ω–∏—è –æ–±—ä—è–≤–ª—è–µ—Ç –æ —á–∞—Å—Ç–∏—á–Ω–æ–π –º–æ–±–∏–ª–∏–∑–∞—Ü–∏–∏"
]

# === –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –æ—Ç –ò–ò ===
def generate_with_qwen(topic):
    generation = Generation(model="qwen-plus")
    full_prompt = f"–ù–∞–ø–∏—à–∏ –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫—É—é —Å–≤–æ–¥–∫—É –æ –º–∏—Ä–µ –≠—Ç–µ—Ä–∏–∏. –¢–µ–º–∞: {topic}"
    response = generation.call(
        prompt=full_prompt,
        temperature=0.7,
        top_p=0.8,
        max_tokens=4096
    )
    return response.output.text.strip()

# === –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞ –≤ –æ—á–µ—Ä–µ–¥—å ===
def add_to_queue(post_text, country_name):
    formatted_post = f'''üóûÔ∏è –ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∞—è —Å–≤–æ–¥–∫–∞ ‚Äî {country_name}
üîπ {post_text}
'''
    with open('posts/queue.txt', 'a', encoding='utf-8') as f:
        f.write(formatted_post + '\n---\n')

if __name__ == '__main__':
    selected_topic = random.choice(TOPICS)
    print(f"[INFO] –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ—Å—Ç–∞ –ø–æ —Ç–µ–º–µ: {selected_topic}")

    try:
        post = generate_with_qwen(selected_topic)
        country_name = selected_topic.split(" ")[0]
        add_to_queue(post, country_name)
        print("[SUCCESS] –ü–æ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—á–µ—Ä–µ–¥—å.")
    except Exception as e:
        print("[ERROR] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç –æ—Ç –ò–ò:", str(e))
